/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boatprototype;


import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danka
 */



public class RaceSignIn extends javax.swing.JFrame {


    
    /**
     * Creates new form Events
     */
    public RaceSignIn() {
        initComponents();
        try {
            //table_update();
            EventIDCbo_update();
//            memberNameCbo_update();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(RaceSignIn.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }

    
    public class Race {
        //Create a Boat class to help with transferring data database to jTable
        private String class_name;
        private String sail_number;
        private String event_id;
        private String full_name;
        
        public String getClassName() {
            return class_name;
        }

        public void setClassName(String className) {
            this.class_name = className;
        }

        public String getSailNumber() {
            return sail_number;
        }

        public void setSailNumber(String sailNumber) {
            this.sail_number = sailNumber;
        }

        public String getEventId() {
            return event_id;
        }

        public void setEventId(String eventId) {
            this.event_id = eventId;
        }

        
        public String getFullName() {
            return full_name;
        }

        public void setFullName(String fullName) {
            this.full_name = fullName;
        }
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    Connection conn;
    PreparedStatement statement;    
    
    private void table_update() throws SQLException, ClassNotFoundException{
        Object eventId = eventIDCbo.getSelectedItem();
        //String eventId = eventIDCbo.getModel().toString();
        //System.out.println("String init");
       
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://computing.gfmat.org:3306/DDalton_SailingClub?user=DDalton&useSSL=true", "DDalton", "7r66JBe3A8");
            //SELECT Duty_Sign_In.*, Members.Full_Name FROM Duty_Sign_In, Members WHERE Duty_Sign_In.Membership_ID = Duty_Sign_In.Membership_ID
            statement = conn.prepareStatement("SELECT * FROM Race_Sign_In WHERE Race_Sign_In.Event_ID = '"+eventId.toString()+"'");
            //statement = conn.prepareStatement("SELECT * FROM Duty_Sign_In WHERE Event_ID = '"+eventId.toString()+"'");
            ResultSet rs = statement.executeQuery();
            //System.out.println("executed query");
            
                ArrayList<Race> list = new ArrayList();
                while(rs.next()){         
                    // Create a boat object using the Boat Class
                    //System.out.println("writing to Duty object");
                    Race race = new Race();
                    //Add data to the boat object from the ResultSet
                    race.setClassName(rs.getString("Class"));
                    race.setSailNumber(rs.getString("Sail_Number"));
                    race.setEventId(rs.getString("Event_ID"));
                    race.setFullName(rs.getString("Full_Name"));
                    //Add the data from the boat object to the next row of the list object
                    list.add(race);
                } 

                
                //Add data from array of Boat objects to eventsTbl
                DefaultTableModel model = (DefaultTableModel)raceTbl.getModel();   
                model.setRowCount(0);    
                //Create a 2 dimensional array with 3 elements
                Object rowData[] = new Object[3];  
                //Fill up the array with the the next row of data from the list
                for(int i = 0; i <list.size(); i++){ 
                        //System.out.println("Writing to jttable");
                        rowData[0] = list.get(i).full_name;
                        rowData[1] = list.get(i).class_name; 
                        rowData[2] = list.get(i).sail_number;
                        //Add the data from thew array into the next row in eventsTbl via the model
                        model.addRow(rowData);
                    }
            
            
            
            
            
        } catch (SQLException ex) {
            System.out.println("errorMessage"+ ex);
        }
        
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        raceSignIn = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        raceTbl = new javax.swing.JTable();
        homeBtn = new javax.swing.JButton();
        creatEventPnl1 = new javax.swing.JPanel();
        eventNameLbl1 = new javax.swing.JLabel();
        eventDateLbl1 = new javax.swing.JLabel();
        eventStartTimeLbl1 = new javax.swing.JLabel();
        eventNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        eventDateTxt = new javax.swing.JTextField();
        eventStartTimeTxt = new javax.swing.JTextField();
        eventIDCbo = new javax.swing.JComboBox<>();
        signUpPanel = new javax.swing.JPanel();
        eventStartTimeLbl = new javax.swing.JLabel();
        sailNumberTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NameTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        classTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(252, 4, 4));

        raceSignIn.setBackground(new java.awt.Color(252, 4, 4));
        raceSignIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        raceSignIn.setForeground(new java.awt.Color(255, 255, 255));
        raceSignIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Test/PSCLogoSmall.PNG"))); // NOI18N
        raceSignIn.setText("Race Sign In");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(raceSignIn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(raceSignIn, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        raceTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Helm Name", "Class", "Sail No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        raceTbl.getTableHeader().setReorderingAllowed(false);
        raceTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                raceTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(raceTbl);
        if (raceTbl.getColumnModel().getColumnCount() > 0) {
            raceTbl.getColumnModel().getColumn(0).setResizable(false);
            raceTbl.getColumnModel().getColumn(1).setResizable(false);
        }

        homeBtn.setText("Back To Home");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        creatEventPnl1.setBorder(javax.swing.BorderFactory.createTitledBorder("Event Details:"));

        eventNameLbl1.setText("Name");

        eventDateLbl1.setText("Date");

        eventStartTimeLbl1.setText("Start Time");

        eventNameTxt.setEditable(false);
        eventNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventNameTxtActionPerformed(evt);
            }
        });

        jLabel3.setText("Event ID");

        eventDateTxt.setEditable(false);
        eventDateTxt.setToolTipText("YYYY-MM-DD");

        eventStartTimeTxt.setEditable(false);
        eventStartTimeTxt.setToolTipText("HH:MM:SS");

        eventIDCbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventIDCboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creatEventPnl1Layout = new javax.swing.GroupLayout(creatEventPnl1);
        creatEventPnl1.setLayout(creatEventPnl1Layout);
        creatEventPnl1Layout.setHorizontalGroup(
            creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatEventPnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventStartTimeLbl1)
                    .addComponent(eventDateLbl1)
                    .addComponent(eventNameLbl1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(eventDateTxt)
                    .addComponent(eventStartTimeTxt)
                    .addComponent(eventIDCbo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        creatEventPnl1Layout.setVerticalGroup(
            creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatEventPnl1Layout.createSequentialGroup()
                .addGroup(creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(eventIDCbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventNameLbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventDateLbl1)
                    .addComponent(eventDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(creatEventPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventStartTimeLbl1)
                    .addComponent(eventStartTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        signUpPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sign Up Here:"));

        eventStartTimeLbl.setText("Sail No.");

        sailNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sailNumberTxtActionPerformed(evt);
            }
        });

        jLabel2.setText("Helm Name");

        NameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTxtActionPerformed(evt);
            }
        });

        jLabel1.setText("Class");

        classTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout signUpPanelLayout = new javax.swing.GroupLayout(signUpPanel);
        signUpPanel.setLayout(signUpPanelLayout);
        signUpPanelLayout.setHorizontalGroup(
            signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(signUpPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(signUpPanelLayout.createSequentialGroup()
                        .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eventStartTimeLbl)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sailNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        signUpPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {NameTxt, classTxt, sailNumberTxt});

        signUpPanelLayout.setVerticalGroup(
            signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(15, 15, 15)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sailNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventStartTimeLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(creatEventPnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(deleteBtn)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(creatEventPnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(signUpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        creatEventPnl1.getAccessibleContext().setAccessibleName("Event Details");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EventIDCbo_update() throws SQLException, ClassNotFoundException{
        try {
                 
            conn = DriverManager.getConnection("jdbc:mysql://computing.gfmat.org:3306/DDalton_SailingClub?user=DDalton&useSSL=true", "DDalton", "7r66JBe3A8");
            statement = conn.prepareStatement("SELECT Event_ID FROM Events");
            ResultSet rs = statement.executeQuery();
            while(rs.next()) 
            {
                eventIDCbo.addItem(rs.getString("Event_ID"));
     
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(RaceSignIn.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    } 
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // Add record to Duty Sign in table: 
        Object fullName = NameTxt.getText();
        Object sailNumber = sailNumberTxt.getText();
        Object selectedEvent = eventIDCbo.getSelectedItem();
        Object Class = classTxt.getText(); 
        
        if (Validation.lengthCheck(1, fullName.toString(), 60) && Validation.lengthCheck(1, sailNumber.toString(), 10) && Validation.lengthCheck(1, Class.toString(), 30)){
            DataManipulation.addRacer(fullName.toString(), sailNumber.toString(), selectedEvent.toString(), Class.toString() );
                    try {
            table_update();
            JOptionPane.showMessageDialog(this, "Record Added"); 
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(RaceSignIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(this, "Please use the correct length for each text box. Name:60 sailNumber:10 Class:10 ");
        }
        

        
        

        
        //Empty fields for next action
        sailNumberTxt.setText("");
        NameTxt.setText("");
        classTxt.setText(" ");
        NameTxt.requestFocus();
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        Object fullName = NameTxt.getText();
        Object sailNumber = sailNumberTxt.getText();
        Object selectedEvent = eventIDCbo.getSelectedItem();
        Object Class = classTxt.getText();

        DataManipulation.deleteRacer(fullName.toString(), sailNumber.toString(), selectedEvent.toString(), Class.toString() );   
        
        JOptionPane.showMessageDialog(this, "Record Deleted"); 
        try {
            table_update();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(RaceSignIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Empty fields for next action
        sailNumberTxt.setText("");
        NameTxt.setText("");
        classTxt.setText("");
        NameTxt.requestFocus();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void raceTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_raceTblMouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel)raceTbl.getModel();
        int selectedIndex = raceTbl.getSelectedRow();

        String race = Df.getValueAt(selectedIndex, 2).toString();
        sailNumberTxt.setText(race);        
        String memberName = Df.getValueAt(selectedIndex, 0).toString();      
        NameTxt.setText(memberName);
        classTxt.setText(Df.getValueAt(selectedIndex, 1).toString());

    }//GEN-LAST:event_raceTblMouseClicked

    private void eventNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventNameTxtActionPerformed

    private void eventIDCboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventIDCboActionPerformed
    
        String selectedItem = eventIDCbo.getSelectedItem().toString();
      
        
        try {
                 
            conn = DriverManager.getConnection("jdbc:mysql://computing.gfmat.org:3306/DDalton_SailingClub?user=DDalton&useSSL=true", "DDalton", "7r66JBe3A8");
            statement = conn.prepareStatement("SELECT Event_Name, Event_Date, Event_Start_Time FROM Events WHERE Event_ID = '"+selectedItem+"'");
            ResultSet rs = statement.executeQuery();
            while(rs.next()) 
            {
                eventNameTxt.setText(rs.getString("Event_Name"));
                eventDateTxt.setText(rs.getString("Event_Date"));
                eventStartTimeTxt.setText(rs.getString("Event_Start_Time"));     
            }
                   
            table_update();
            
        } catch (SQLException ex) {
            Logger.getLogger(RaceSignIn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RaceSignIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }//GEN-LAST:event_eventIDCboActionPerformed

    private void classTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classTxtActionPerformed

    private void sailNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sailNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sailNumberTxtActionPerformed

    private void NameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RaceSignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RaceSignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RaceSignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RaceSignIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RaceSignIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NameTxt;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField classTxt;
    private javax.swing.JPanel creatEventPnl1;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel eventDateLbl1;
    private javax.swing.JTextField eventDateTxt;
    private javax.swing.JComboBox<String> eventIDCbo;
    private javax.swing.JLabel eventNameLbl1;
    private javax.swing.JTextField eventNameTxt;
    private javax.swing.JLabel eventStartTimeLbl;
    private javax.swing.JLabel eventStartTimeLbl1;
    private javax.swing.JTextField eventStartTimeTxt;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel raceSignIn;
    private javax.swing.JTable raceTbl;
    private javax.swing.JTextField sailNumberTxt;
    private javax.swing.JPanel signUpPanel;
    // End of variables declaration//GEN-END:variables
}
