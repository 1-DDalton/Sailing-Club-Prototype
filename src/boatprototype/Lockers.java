/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boatprototype;


import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danka
 */



public class Lockers extends javax.swing.JFrame {


    

    
    /**
     * Creates new form Events
     */
    public Lockers() {
        initComponents();
        try {
            table_update();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Lockers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    public class Locker {
        //Create a Boat class to help with transferring data database to jTable
        private String member_id;
        private String locker_name;
        private String password;
        private String available;


        public String getMemberId() {
            return member_id;
        }

        public void setMemberId(String memberId) {
            this.member_id = memberId;
        }
        
        public String getLockerName() {
            return locker_name;
        }
        
        public void setLockerName(String lockerName) {
            this.locker_name = lockerName;
        }
        
        public String getPassword() {
            return password;
        }
        
        public void setPassword(String password) {
            this.password = password;
        }
        
        public String getAvailable() {
            return available;
        }
        
        public void setAvailable(String available) {
            this.available = available;
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    Connection conn;
    PreparedStatement statement;    
    
    private void table_update() throws SQLException, ClassNotFoundException{
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://computing.gfmat.org:3306/DDalton_SailingClub?user=DDalton&useSSL=true", "DDalton", "7r66JBe3A8");
            statement = conn.prepareStatement("SELECT * FROM Locker ORDER BY Locker_ID asc");
            ResultSet rs = statement.executeQuery();
                
                ArrayList<Locker> list = new ArrayList();
                while(rs.next()){         
                    // Create a boat object using the Boat Class
                    Locker locker = new Locker();
                    //Add data to the boat object from the ResultSet
                    locker.setPassword(rs.getString("Locker_Password"));
                    locker.setLockerName(rs.getString("Locker_ID"));
                    locker.setMemberId(rs.getString("Membership_ID"));
                    locker.setAvailable(rs.getString("Available"));
                    //Add the data from the boat object to the next row of the list object
                    list.add(locker);
                } 

                //Add data from array of Boat objects to boatTbl
                DefaultTableModel model = (DefaultTableModel)lockerTbl.getModel();   
                model.setRowCount(0);    
                //Create a 2 dimensional array with 6 elements
                Object rowData[] = new Object[2];  
                //Fill up the array with the the next row of data from the list
                for(int i = 0; i <list.size(); i++){                        
                        rowData[0] = list.get(i).locker_name;
                        rowData[1] = list.get(i).available;
                        //Add the data from thew array into the next row in eventsTbl via the model
                        model.addRow(rowData);
                    }
            
            
            
            
            
        } catch (SQLException ex) {
            System.out.println("errorMessage"+ ex);
        }
        
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        boatAdmin = new javax.swing.JLabel();
        lockerPnl = new javax.swing.JPanel();
        memberId = new javax.swing.JLabel();
        passwordGeneratorBtn = new javax.swing.JButton();
        lockerNameLbl = new javax.swing.JLabel();
        lockerNameTxt = new javax.swing.JTextField();
        passwordLbl = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JTextField();
        memberIDTxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lockerTbl = new javax.swing.JTable();
        homeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(252, 4, 4));

        boatAdmin.setBackground(new java.awt.Color(252, 4, 4));
        boatAdmin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boatAdmin.setForeground(new java.awt.Color(255, 255, 255));
        boatAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Test/PSCLogoSmall.PNG"))); // NOI18N
        boatAdmin.setText("Locker");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(boatAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boatAdmin, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        lockerPnl.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Boat Here:"));

        memberId.setText("Member ID");

        passwordGeneratorBtn.setText("Generate");
        passwordGeneratorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordGeneratorBtnActionPerformed(evt);
            }
        });

        lockerNameLbl.setText("Locker Name");

        lockerNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockerNameTxtActionPerformed(evt);
            }
        });

        passwordLbl.setText("Password");

        passwordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTxtActionPerformed(evt);
            }
        });
        passwordTxt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                passwordTxtPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout lockerPnlLayout = new javax.swing.GroupLayout(lockerPnl);
        lockerPnl.setLayout(lockerPnlLayout);
        lockerPnlLayout.setHorizontalGroup(
            lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lockerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(lockerPnlLayout.createSequentialGroup()
                            .addComponent(memberId)
                            .addGap(14, 14, 14))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lockerPnlLayout.createSequentialGroup()
                            .addComponent(lockerNameLbl)
                            .addGap(18, 18, 18)))
                    .addGroup(lockerPnlLayout.createSequentialGroup()
                        .addComponent(passwordLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lockerPnlLayout.createSequentialGroup()
                        .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passwordGeneratorBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lockerNameTxt)
                    .addComponent(memberIDTxt))
                .addContainerGap())
        );
        lockerPnlLayout.setVerticalGroup(
            lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lockerPnlLayout.createSequentialGroup()
                .addGroup(lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberId)
                    .addComponent(memberIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lockerNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lockerNameLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lockerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordGeneratorBtn)
                    .addComponent(passwordLbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        updateBtn.setText("Save");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        lockerTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Locker Name", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lockerTbl.getTableHeader().setReorderingAllowed(false);
        lockerTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lockerTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lockerTbl);

        homeBtn.setText("Back To Home");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lockerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lockerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // Add record to locker table: 
        String password = passwordTxt.getText();
        String lockerName = lockerNameTxt.getText();
        String memberID = memberIDTxt.getText();
        String available = "No";
        DataManipulation.addLocker(password, lockerName, memberID, available);
        
        JOptionPane.showMessageDialog(this, "Record ||Updated"); 
        try {
            table_update();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Lockers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Empty fields for next action
        passwordTxt.setText("");
        lockerNameTxt.setText("");
        memberIDTxt.setText("");
        passwordTxt.requestFocus();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeBtnActionPerformed

    private void lockerTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockerTblMouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel)lockerTbl.getModel();
        int selectedIndex = lockerTbl.getSelectedRow();
        
        lockerNameTxt.setText(Df.getValueAt(selectedIndex, 0).toString());
    }//GEN-LAST:event_lockerTblMouseClicked

    private void passwordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTxtActionPerformed

    private void passwordGeneratorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordGeneratorBtnActionPerformed
        String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String lower = "abcdefghijklmnopqrstuvwxyz";
        String num = "0123456789";
        String special = "!?@#*&";
        String combination = upper + lower + special + num;
        int len = 6;
        char[] password = new char[len];
        Random r = new Random();
        for(int i = 0; i < len ; i ++){
            password[i] = combination.charAt(r.nextInt(combination.length()));
        }
        passwordTxt.setText(String.valueOf(password));
    }//GEN-LAST:event_passwordGeneratorBtnActionPerformed

    private void lockerNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockerNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lockerNameTxtActionPerformed

    private void passwordTxtPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_passwordTxtPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTxtPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Locker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Locker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Locker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Locker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lockers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel boatAdmin;
    private javax.swing.JButton homeBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lockerNameLbl;
    private javax.swing.JTextField lockerNameTxt;
    private javax.swing.JPanel lockerPnl;
    private javax.swing.JTable lockerTbl;
    private javax.swing.JTextField memberIDTxt;
    private javax.swing.JLabel memberId;
    private javax.swing.JButton passwordGeneratorBtn;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
