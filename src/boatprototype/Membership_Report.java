/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boatprototype;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 1-DDalton
 */
public class Membership_Report extends javax.swing.JFrame {

    /**
     * Creates new form Membership_Report
     */
    public Membership_Report() {
        initComponents();
        try {
            table_update();
        } catch (SQLException ex) {
            Logger.getLogger(Membership_Report.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Membership_Report.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        public class Member {
        //Create a Member class to help with transferring data database to jTable
        private String member_id;
        private String member_name;
        private String member_dob;
        private String member_phone;
        private String member_email;
        private String member_address1;
        private String member_address2;
        private String member_town;
        private String member_postcode;
        private String member_occupation;
        private String member_type;
        private String member_family_id;
        
        public String getMemberId() {
            return member_id;
        }

        public void setMemberId(String memberId) {
            this.member_id = memberId;
        }

        public String getMemberName() {
            return member_name;
        }

        public void setMemberName(String memberName) {
            this.member_name = memberName;
        }

        public String getMemberDOB() {
            return member_dob;
        }

        public void setMemberDOB(String memberDob) {
            this.member_dob = memberDob;
        }

        public String getMemberPhone() {
            return member_phone;
        }

        public void setMemberPhone(String memberPhone) {
            this.member_phone = memberPhone;
        }
        
        public String getMemberEmail() {
            return member_email;
        }

        public void setMemberEmail(String memberEmail) {
            this.member_email = memberEmail;
        }
       
        public String getMemberAddress1() {
            return member_address1;
        }

        public void setMemberAddress1(String memberAddress1) {
            this.member_address1 = memberAddress1;
        }
        
        public String getMemberAddress2() {
            return member_address2;
        }

        public void setMemberAddress2(String memberAddress2) {
            this.member_address2 = memberAddress2;
        }
        
        public String getMemberTown() {
            return member_town;
        }

        public void setMemberTown(String memberTown) {
            this.member_town = memberTown;
        }
        
        public String getMemberPostcode() {
            return member_postcode;
        }

        public void setMemberPostcode(String memberPostcode) {
            this.member_postcode = memberPostcode;
        }
        
        public String getMemberOccupation() {
            return member_occupation;
        }

        public void setMemberOccupation(String memberOccupation) {
            this.member_occupation = memberOccupation;
        }
        
        public String getMemberType() {
            return member_type;
        }

        public void setMemberType(String memberType) {
            this.member_type = memberType;
        }
        
        public String getMemberFamily_ID() {
            return member_family_id;
        }

        public void setMemberFamilyID(String memberFamilyID) {
            this.member_family_id = memberFamilyID;
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    Connection conn;
    PreparedStatement statement;    
    
    private void table_update() throws SQLException, ClassNotFoundException{
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://computing.gfmat.org:3306/DDalton_SailingClub?user=DDalton&useSSL=true", "DDalton", "7r66JBe3A8");
            statement = conn.prepareStatement("SELECT Members.*, Address.* FROM Members, Address WHERE Members.Family_ID = Address.Family_ID");
            ResultSet rs = statement.executeQuery();
                
                ArrayList<Member> list = new ArrayList();
                while(rs.next()){         
                    // Create a Member object using the Member Class
                    Member member = new Member();
                    //Add data to the Member object from the ResultSet
                    member.setMemberId(rs.getString("Membership_ID"));
                    member.setMemberName(rs.getString("Full_Name"));
                    member.setMemberDOB(rs.getString("DOB"));
                    member.setMemberEmail(rs.getString("Email"));
                    member.setMemberOccupation(rs.getString("Occupation"));
                    member.setMemberType(rs.getString("Membership_Type"));
                    member.setMemberPhone(rs.getString("Phone_Number"));
                    member.setMemberFamilyID(rs.getString("Family_ID"));
                    member.setMemberAddress1(rs.getString("Address_Line_1"));
                    member.setMemberAddress2(rs.getString("Address_Line_2"));
                    member.setMemberTown(rs.getString("Town"));
                    member.setMemberPostcode(rs.getString("Postcode"));
                       
                    //Add the data from the Member object to the next row of the list object
                    list.add(member);
                } 

                //Add data from array of Member objects to memberTbl
                DefaultTableModel model = (DefaultTableModel)memberTbl.getModel();   
                model.setRowCount(0);    
                //Create a 2 dimensional array with 12 elements
                Object rowData[] = new Object[12];  
                //Fill up the array with the the next row of data from the list
                for(int i = 0; i <list.size(); i++){                        
                        rowData[0] = list.get(i).getMemberId();
                        rowData[1] = list.get(i).getMemberName();
                        rowData[2] = list.get(i).getMemberDOB();
                        rowData[3] = list.get(i).getMemberAddress1();
                        rowData[4] = list.get(i).getMemberAddress2();
                        rowData[5] = list.get(i).getMemberTown();
                        rowData[6] = list.get(i).getMemberPostcode();
                        rowData[7] = list.get(i).getMemberEmail();
                        rowData[8] = list.get(i).getMemberPhone();
                        rowData[9] = list.get(i).getMemberOccupation();
                        rowData[10] = list.get(i).getMemberType();
                        rowData[11] = list.get(i).getMemberFamily_ID();
                                
                        //Add the data from thew array into the next row in memberTbl via the model
                        model.addRow(rowData);
                    }
            
            
            
            
            
        } catch (SQLException ex) {
            System.out.println("errorMessage"+ ex);
        }
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        memberTbl = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        homeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        memberTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Membership ID", "Name", "DOB", "Address Line 1", "Address Line 2", "Town", "Postcode", "Email", "Phone Number", "Occupation", "Membership Type", "Family ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(memberTbl);

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        homeBtn.setText("Home Page");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1126, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        new Admin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Membership_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Membership_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Membership_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Membership_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Membership_Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton homeBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable memberTbl;
    // End of variables declaration//GEN-END:variables
}
